name: GitHub Actions Build

on:
  push:
    paths-ignore:
      - "**/*.md"
      - '**/*.txt'
    branches:
      - '**'
  pull_request:
    paths-ignore:
      - "**/*.md"
      - '**/*.txt'
  workflow_dispatch:
    inputs:
      release:
        description: "Create a release"
        type: choice
        required: false
        default: 'false'
        options:
          - 'true'
          - 'false'
      version_increment:
        description: "Default semantic version release type"
        type: choice
        required: false
        default: 'minor'
        options:
          - 'major'
          - 'minor'
          - 'patch'

env:
  VERINC: ${{ github.event.inputs.version_increment || 'minor' }}

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@main

    - name: Auto Increment Version
      uses: MCKanpolat/auto-semver-action@v2
      id: versioning
      with:
        releaseType: ${{ env.VERINC }} 
        incrementPerCommit: false
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure build
      run: ./premake5 vs2022 --with-version=${{ steps.versioning.outputs.version }}

    - name: Build
      run: |
        msbuild -m build/Ultimate-ASI-Loader-x64.sln /property:Configuration=Release /property:Platform=x64
        msbuild -m build/Ultimate-ASI-Loader-Win32.sln /property:Configuration=Release /property:Platform=Win32

    - name: Pack binaries
      run: |
        ./release.bat
        ./release.ps1

    - name: Upload artifact (Win32)
      uses: actions/upload-artifact@v4
      with:
        name: Ultimate-ASI-Loader-Win32
        path: dist/Win32/dll/*

    - name: Upload artifact (x64)
      uses: actions/upload-artifact@v4
      with:
        name: Ultimate-ASI-Loader-x64
        path: dist/x64/dll/*

    - name: Upload Release (Main)
      if: |
        github.event.inputs.release == 'true' &&
        github.ref_name == 'master' &&
        github.repository == 'ThirteenAG/Ultimate-ASI-Loader'
      uses: ncipollo/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: false
        name: Ultimate ASI Loader v${{ steps.versioning.outputs.version }}
        bodyFile: "release.md"
        tag: v${{ steps.versioning.outputs.version }}
        artifacts: bin/Ultimate-ASI-Loader.zip, bin/Ultimate-ASI-Loader_x64.zip

    - name: Get release info (Win32)
      if: |
        github.event.inputs.release == 'true' &&
        github.ref_name == 'master' &&
        github.repository == 'ThirteenAG/Ultimate-ASI-Loader'
      id: release_info_x86
      uses: cardinalby/git-get-release-action@master
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: Win32-latest

    - name: Upload Release (Win32)
      if: |
        github.event.inputs.release == 'true' &&
        github.ref_name == 'master' &&
        github.repository == 'ThirteenAG/Ultimate-ASI-Loader'
      uses: ncipollo/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        name: ${{ steps.release_info_x86.outputs.name }}
        body: ${{ steps.release_info_x86.outputs.body }}
        tag: ${{ steps.release_info_x86.outputs.tag_name }}
        artifacts: dist/Win32/zip/*.zip

    - name: Get release info (Win64)
      if: |
        github.event.inputs.release == 'true' &&
        github.ref_name == 'master' &&
        github.repository == 'ThirteenAG/Ultimate-ASI-Loader'
      id: release_info_x64
      uses: cardinalby/git-get-release-action@master
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: x64-latest

    - name: Upload Release (Win64)
      if: |
        github.event.inputs.release == 'true' &&
        github.ref_name == 'master' &&
        github.repository == 'ThirteenAG/Ultimate-ASI-Loader'
      uses: ncipollo/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        name: ${{ steps.release_info_x64.outputs.name }}
        body: ${{ steps.release_info_x64.outputs.body }}
        tag: ${{ steps.release_info_x64.outputs.tag_name }}
        artifacts: dist/x64/zip/*.zip
